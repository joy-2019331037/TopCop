import com.itextpdf.text.*;
import com.itextpdf.text.Image;
import com.itextpdf.text.Document;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Color;


import java.io.FileOutputStream;



import java.awt.event.ActionEvent;
import java.io.File;
import java.sql.*;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import net.proteanit.sql.DbUtils;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author HP
 */
public class updatingReport extends javax.swing.JFrame{
    public int flag = 0;
    public int found=0;
    /**
     * Creates new form updatingReport
     */
    public updatingReport() {
        initComponents();
        
        notFoundButton.setVisible(false);
        searchButton.setBackground(Color.WHITE);
        saveButton.setBackground(Color.WHITE);
        deleteButton.setBackground(Color.WHITE);
        this.setTitle("Report Updating");
        java.awt.Image icon = new ImageIcon(this.getClass().getResource("/project_icon.png")).getImage();
        this.setIconImage(icon);
        
       
    }
    ResultSet rs = null;
    DefaultTableModel model = null;
    
   
    
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        reportIDText = new javax.swing.JTextField();
        notFoundButton = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        suspectDetailsTxt = new javax.swing.JTextField();
        crimePlace_txt = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();
        victimTxt = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        suspectTxt = new javax.swing.JTextField();
        descriptionTxt = new javax.swing.JTextField();
        crimeTypeTxt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        witnessLabel = new javax.swing.JLabel();
        statOfWit = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        prof_txt = new javax.swing.JTextField();
        statOfWitText = new javax.swing.JTextField();
        witnessTxt = new javax.swing.JTextField();
        bloodText = new javax.swing.JTextField();
        address_txt = new javax.swing.JTextField();
        deleteButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Report ID");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 40, 70, -1));

        reportIDText.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        reportIDText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                reportIDTextMouseEntered(evt);
            }
        });
        reportIDText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                reportIDTextKeyReleased(evt);
            }
        });
        jPanel1.add(reportIDText, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 40, 100, -1));

        notFoundButton.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 14)); // NOI18N
        notFoundButton.setForeground(new java.awt.Color(255, 0, 51));
        notFoundButton.setText("Report not found!");
        jPanel1.add(notFoundButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 80, 150, 20));

        searchButton.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search.png"))); // NOI18N
        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        jPanel1.add(searchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 40, 120, 30));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("PLace of Crime");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 320, -1, -1));
        jPanel1.add(suspectDetailsTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 400, 200, 70));
        jPanel1.add(crimePlace_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 320, 200, -1));

        saveButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        saveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/save.png"))); // NOI18N
        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        jPanel1.add(saveButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 510, 100, 30));
        jPanel1.add(victimTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 130, 160, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setText("Victim");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 110, -1, -1));

        suspectTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suspectTxtActionPerformed(evt);
            }
        });
        jPanel1.add(suspectTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 360, 200, -1));
        jPanel1.add(descriptionTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 220, 200, 80));
        jPanel1.add(crimeTypeTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 180, 200, 30));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Crime Type");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, -1, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setText("Description");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 220, -1, -1));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel11.setText("Suspect");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 360, 50, -1));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel12.setText("Details on Suspect");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 400, -1, -1));

        witnessLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        witnessLabel.setText("Witness Name");
        jPanel1.add(witnessLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 330, -1, -1));

        statOfWit.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        statOfWit.setText("Statement of Witness");
        jPanel1.add(statOfWit, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 390, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Address");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 280, -1, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("Profession");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 230, 70, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setText("Blood Group");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 180, -1, -1));
        jPanel1.add(prof_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 230, 210, 30));
        jPanel1.add(statOfWitText, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 390, 210, 80));
        jPanel1.add(witnessTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 330, 210, 30));
        jPanel1.add(bloodText, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 180, 210, 30));
        jPanel1.add(address_txt, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 280, 210, 30));

        deleteButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        jPanel1.add(deleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 510, 90, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 840, 610));

        setSize(new java.awt.Dimension(856, 649));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/crime record", "root", "");
            PreparedStatement pst = con.prepareStatement("select id,victim,crimeType,description,suspect,suspectDetails,bloodGroup,profession,address,crimePlace,witness,witnessStatement,userid from report where id=? ");
            
            int id = Integer.parseInt(reportIDText.getText());
            pst.setInt(1, id);
            ResultSet rs = pst.executeQuery();
                
           if(rs.next()==false){
               //means this record is not present in the entire database
              notFoundButton.setVisible(true);
              //idTxt.setText("");
              victimTxt.setText("");
              suspectTxt.setText("");
              descriptionTxt.setText("");
              crimeTypeTxt.setText("");
              witnessTxt.setText("");
              suspectDetailsTxt.setText("");
              bloodText.setText("");
              address_txt.setText("");
              prof_txt.setText("");
              crimePlace_txt.setText("");
              statOfWitText.setText("");

              }
           else{
                //means this record is present in the database
               System.out.println("found");
               flag =1;
               
               int currentUserId=UserWindow.userid;
               int reportFiledById=Integer.parseInt(rs.getString("userid"));
               
               //this is for preventing one user to see other users' report
               if(currentUserId==reportFiledById){
                   //the record is present in the database
                   //and the record being searched was also filed by the searcher
                   
                   
                   
                    //String ID = rs.getString("id");
                    //idTxt.setText(ID);
                    String v = rs.getString("victim");
                    victimTxt.setText(v);
                    victimTxt.setEditable(false);
                    String type = rs.getString("crimeType");
                    crimeTypeTxt.setText(type);
                    crimeTypeTxt.setEditable(false);
                    String desc = rs.getString("description");
                    descriptionTxt.setText(desc);
                    String s = rs.getString("suspect");
                    suspectTxt.setText(s);
                    String details = rs.getString("suspectDetails");
                    suspectDetailsTxt.setText(details);
                    String bloodGrp = rs.getString("bloodGroup");
                    bloodText.setText(bloodGrp);
                
                    String prof = rs.getString("profession");
                    prof_txt.setText(prof);
                    String address = rs.getString("address");
                    address_txt.setText(address);
                    String crimePlace = rs.getString("crimePlace");
                    crimePlace_txt.setText(crimePlace);
                    String wt = rs.getString("witness");
                    witnessTxt.setText(wt);
                    String stwt = rs.getString("witnessStatement");
                    statOfWitText.setText(stwt);
               }
               else{
                   //the record is present in the database
                   //but the record being searched was not filed by the searcher
                    notFoundButton.setVisible(true);
                    //idTxt.setText("");
                    victimTxt.setText("");
                    suspectTxt.setText("");
                    descriptionTxt.setText("");
                    crimeTypeTxt.setText("");
                    witnessTxt.setText("");
                    suspectDetailsTxt.setText("");
                    bloodText.setText("");
                    address_txt.setText("");
                    prof_txt.setText("");
                    crimePlace_txt.setText("");
                    statOfWitText.setText("");

               }
               
           }           
        }catch(Exception e){
            
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void reportIDTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_reportIDTextKeyReleased
        // TODO add your handling code here:
      
    }//GEN-LAST:event_reportIDTextKeyReleased

    private void reportIDTextMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportIDTextMouseEntered
        // TODO add your handling code here:
        notFoundButton.setVisible(false);
    }//GEN-LAST:event_reportIDTextMouseEntered

    private void suspectTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suspectTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_suspectTxtActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        String id = reportIDText.getText();
        String victim = victimTxt.getText();
        //String type = crimeTypeTxt.getText();
        String des = descriptionTxt.getText();
        String place = crimePlace_txt.getName();
        String s  = suspectTxt.getText();
        String de = suspectDetailsTxt.getText();
        String bg = bloodText.getText();
        String pro = prof_txt.getText();
        String ad = address_txt.getText();
        String wt = witnessTxt.getText();
        String stwt = statOfWitText.getText();
        try {
           
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/crime record", "root", "");
            
            Statement st = con.createStatement();
            
            st.executeUpdate("  UPDATE report SET description='"+des+"', suspect='"+s+"', suspectDetails='"+de+"',bloodGroup='"+bg+"', profession='"+pro+"', address='"+ad+"', crimePlace='"+place+"',witness='"+wt+"',witnessStatement='"+stwt+"' WHERE id='"+id+"'   ");
            
            
            
            
            
            JOptionPane.showMessageDialog(this, "Report updated successfully.");
            
            
            
            reportIDText.setText("");
           victimTxt.setText("");
          crimeTypeTxt.setText("");
            descriptionTxt.setText("");
           crimePlace_txt.setText("");
            suspectTxt.setText("");
            suspectDetailsTxt.setText("");
            bloodText.setText("");
            prof_txt.setText("");
            address_txt.setText("");
           witnessTxt.setText("");
            statOfWitText.setText("");
        } catch (Exception e) {
        }
       
       
    }//GEN-LAST:event_saveButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        String id = reportIDText.getText();
        int x = JOptionPane.showConfirmDialog(this, "Are you sure to delete this report?\n[PLease note deleted reports can not be regained]", "Select", JOptionPane.YES_NO_OPTION);
        if(x==0){
            try {
                    Class.forName("com.mysql.cj.jdbc.Driver");
                    Connection con = DriverManager.getConnection("jdbc:mysql://localhost/crime record", "root", "");

                    String sql = "delete from report where id=?";
                    PreparedStatement pst = con.prepareStatement(sql);
                    pst.setString(1, id);
                    pst.execute();

                    JOptionPane.showMessageDialog(this, "Report Deleted.");
            
                    reportIDText.setText("");
                  victimTxt.setText("");
                 crimeTypeTxt.setText("");
                   descriptionTxt.setText("");
                  crimePlace_txt.setText("");
                   suspectTxt.setText("");
                   suspectDetailsTxt.setText("");
                   bloodText.setText("");
                   prof_txt.setText("");
                   address_txt.setText("");
                  witnessTxt.setText("");
                   statOfWitText.setText("");
                } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(updatingReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(updatingReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(updatingReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(updatingReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new updatingReport().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField address_txt;
    private javax.swing.JTextField bloodText;
    private javax.swing.JTextField crimePlace_txt;
    private javax.swing.JTextField crimeTypeTxt;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField descriptionTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel notFoundButton;
    private javax.swing.JTextField prof_txt;
    private javax.swing.JTextField reportIDText;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JLabel statOfWit;
    private javax.swing.JTextField statOfWitText;
    private javax.swing.JTextField suspectDetailsTxt;
    private javax.swing.JTextField suspectTxt;
    private javax.swing.JTextField victimTxt;
    private javax.swing.JLabel witnessLabel;
    private javax.swing.JTextField witnessTxt;
    // End of variables declaration//GEN-END:variables

    public void actionPerformed(ActionEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
